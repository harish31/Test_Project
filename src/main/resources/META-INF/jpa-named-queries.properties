#Order Allocation Search Queries
allocation.search=SELECT so.supplierId as supplierId,so.supplierTypeId as supplierTypeId,so.supplierName as supplierName,count(so.supplierId) as count,sum(ole.currentItemQty) as sum FROM SupplierOrder so INNER JOIN so.orderCustomer oc INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderLines ol INNER JOIN ol.orderLineEnriched ole WHERE (:#{#allocationSearchRequest.orderId} IS NULL or so.orderId=:#{#allocationSearchRequest.orderId}) and (:#{#allocationSearchRequest.divisionId} IS NULL or so.suppDivisionId=:#{#allocationSearchRequest.divisionId}) and (:#{#allocationSearchRequest.productId} IS NULL or ol.productId=:#{#allocationSearchRequest.productId}) and (:#{#allocationSearchRequest.supplierId} IS NULL or so.supplierId=:#{#allocationSearchRequest.supplierId}) and   (:#{#allocationSearchRequest.deliveryDate} is null or soe.scheduledDeliveryDate=:#{#allocationSearchRequest.deliveryDate}) and (:#{#allocationSearchRequest.processingDate} is null or soe.scheduledProcessDate=:#{#allocationSearchRequest.processingDate}) and so.orderStatusId IN (:orderStatusIds) and so.orderTypeId IN (:orderTypeIds) and (:#{#allocationSearchRequest.customerId} IS NULL or oc.customerId=:#{#allocationSearchRequest.customerId}) and (:#{#allocationSearchRequest.customerGroupId} IS NULL or oc.cogId=:#{#allocationSearchRequest.customerGroupId}) and ol.orderLineStatusId NOT IN (:invalidOrderLineStatuses) and (so.isLockedForEdit is null or so.isLockedForEdit not like :isLockedForEdit) GROUP BY so.supplierId,so.supplierTypeId,so.supplierName

#Order Allocation Review Queries
product.allocation.review=SELECT ole.currentItemQty as currentItemQty,ol.lineNbr as lineNbr,oc.customerId as customerId,so.suppDivisionId as divisionId,so.orderId as orderId,soe.scheduledDeliveryDate as scheduledDeliveryDate,soe.scheduledProcessDate as scheduledProcessDate,ol.productId as productId,so.createTs as createdOn ,ole.sysAdjustedItemQty as sysAdjustedItemQty,ole.userAdjustedItemQty as userAdjustedItemQty,ol.orderedItemQty as orderedItemQty,so.orderTypeId as orderTypeId FROM SupplierOrder so INNER JOIN so.orderCustomer oc INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderLines ol INNER JOIN ol.orderLineEnriched ole WHERE (:#{#allocationReviewRequest.orderId} IS NULL or so.orderId=:#{#allocationReviewRequest.orderId}) and (:#{#allocationReviewRequest.divisionId} IS NULL or so.suppDivisionId=:#{#allocationReviewRequest.divisionId}) and (:#{#allocationReviewRequest.productId} IS NULL or ol.productId=:#{#allocationReviewRequest.productId}) and (:#{#allocationReviewRequest.supplierId} IS NULL or so.supplierId=:#{#allocationReviewRequest.supplierId}) and   (:#{#allocationReviewRequest.deliveryDate} is null or soe.scheduledDeliveryDate=:#{#allocationReviewRequest.deliveryDate}) and (:#{#allocationReviewRequest.processingDate} is null or soe.scheduledProcessDate=:#{#allocationReviewRequest.processingDate}) and so.orderStatusId IN (:orderStatusIds) and so.orderTypeId IN (:orderTypeIds) and (:#{#allocationReviewRequest.customerId} IS NULL or oc.customerId=:#{#allocationReviewRequest.customerId}) and (:#{#allocationReviewRequest.customerGroupId} IS NULL or oc.cogId=:#{#allocationReviewRequest.customerGroupId}) and ol.orderLineStatusId NOT IN (:invalidOrderLineStatuses)  and (so.isLockedForEdit is null or so.isLockedForEdit not like :isLockedForEdit)

#Product Substitution Review Search
product.substitution.review=SELECT ole.currentItemQty as currentItemQty,ol.lineNbr as lineNbr,oc.customerId as customerId,so.suppDivisionId as divisionId,so.orderId as orderId,soe.scheduledDeliveryDate as scheduledDeliveryDate,soe.scheduledProcessDate as scheduledProcessDate,ol.productId as productId,so.createTs as createdOn,ole.sysAdjustedItemQty as sysAdjustedItemQty,ole.userAdjustedItemQty as userAdjustedItemQty,ole.productDesc as productDesc,so.supplierId as supplierId,so.orderTypeId as orderTypeId,oc.state as state,oc.custTypeId as custTypeId,ole.allowedCustomerTypeIds as allowedCustomerTypeIds,ol.orderedItemQty as orderedItemQty FROM SupplierOrder so INNER JOIN so.orderCustomer oc INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderLines ol INNER JOIN ol.orderLineEnriched ole WHERE (:#{#substitutionReviewRequest.orderId} IS NULL or so.orderId=:#{#substitutionReviewRequest.orderId}) and (:#{#substitutionReviewRequest.divisionId} IS NULL or so.suppDivisionId=:#{#substitutionReviewRequest.divisionId}) and (:#{#substitutionReviewRequest.productId} IS NULL or ol.productId=:#{#substitutionReviewRequest.productId}) and (:#{#substitutionReviewRequest.supplierId} IS NULL or so.supplierId=:#{#substitutionReviewRequest.supplierId}) and   (:#{#substitutionReviewRequest.deliveryDate} is null or soe.scheduledDeliveryDate=:#{#substitutionReviewRequest.deliveryDate}) and (:#{#substitutionReviewRequest.processingDate} is null or soe.scheduledProcessDate=:#{#substitutionReviewRequest.processingDate}) and so.orderStatusId IN (:orderStatusIds) and so.orderTypeId IN (:orderTypeIds) and (:#{#substitutionReviewRequest.customerId} IS NULL or oc.customerId=:#{#substitutionReviewRequest.customerId}) and (:#{#substitutionReviewRequest.customerGroupId} IS NULL or oc.cogId=:#{#substitutionReviewRequest.customerGroupId}) and ol.orderLineStatusId NOT IN (:invalidOrderLineStatuses)  and (so.isLockedForEdit is null or so.isLockedForEdit not like :isLockedForEdit)

#Product Replace Search Query
product.substitution.review.submit=SELECT ol from OrderLine ol JOIN FETCH ol.orderLineEnriched ole JOIN FETCH ol.supplierOrder so JOIN FETCH so.supplierOrderEnriched JOIN FETCH so.orderCustomer oc WHERE ol.lineNbr IN (:lineNbrs)

#Product Cancel Queries
product.cancel.search.lines=SELECT  ol FROM SupplierOrder so INNER JOIN so.orderCustomer oc INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderLines ol INNER JOIN ol.orderLineEnriched ole WHERE (:#{#productCancelRequest.orderId} IS NULL or so.orderId=:#{#productCancelRequest.orderId}) and (:#{#productCancelRequest.divisionId} IS NULL or so.suppDivisionId=:#{#productCancelRequest.divisionId}) and (:#{#productCancelRequest.productId} IS NULL or ol.productId=:#{#productCancelRequest.productId}) and (:#{#productCancelRequest.supplierId} IS NULL or so.supplierId=:#{#productCancelRequest.supplierId}) and   (:#{#productCancelRequest.deliveryDate} is null or soe.scheduledDeliveryDate=:#{#productCancelRequest.deliveryDate}) and (:#{#productCancelRequest.processingDate} is null or soe.scheduledProcessDate=:#{#productCancelRequest.processingDate}) and so.orderStatusId IN (:orderStatusIds) and so.orderTypeId IN (:orderTypeIds) and (:#{#productCancelRequest.customerId} IS NULL or oc.customerId=:#{#productCancelRequest.customerId}) and (:#{#productCancelRequest.customerGroupId} IS NULL or oc.cogId=:#{#productCancelRequest.customerGroupId}) and ol.orderLineStatusId NOT IN (:invalidOrderLineStatuses) and (so.isLockedForEdit is null or so.isLockedForEdit not like :isLockedForEdit) 

#Order Allocation Quantity Queries
product.allocation.review.submit=SELECT ol FROM OrderLine ol WHERE ol.lineNbr IN (:lineNbrs) and ol.orderLineStatusId NOT IN (:invalidOrderLineStatuses)

#Unordered Allocation Review Queries
product.allocation.review.findCustomers=SELECT distinct oc.customerId as customerId FROM SupplierOrder so INNER JOIN so.orderCustomer oc INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderLines ol WHERE (:#{#allocationReviewRequest.productId} IS NULL or ol.productId=:#{#allocationReviewRequest.productId}) and (:#{#allocationReviewRequest.supplierId} IS NULL or so.supplierId=:#{#allocationReviewRequest.supplierId}) and (:#{#allocationReviewRequest.processingDate} is null or soe.scheduledProcessDate=:#{#allocationReviewRequest.processingDate}) 


#Quries related to Manage supplier orders
manage.order.search.orderid=SELECT ol.supplierOrder.orderId FROM OrderLine ol INNER JOIN ol.orderLineEnriched ole WHERE (:productId IS NULL OR ol.productId =:productId) AND (:supplierProductId IS NULL OR ole.supplierProductId =:supplierProductId)

manage.order.search.in=SELECT so FROM SupplierOrder so INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderCustomer oc WHERE so.orderId IN (:orderIds) AND (COALESCE(:#{#searchOrderRequest.divisionId},null) IS NULL or so.suppDivisionId IN (:#{#searchOrderRequest.divisionId})) AND (:#{#searchOrderRequest.supplierId} is null or so.supplierId=:#{#searchOrderRequest.supplierId} ) AND ((:#{#searchOrderRequest.deliveryDateFrom} is null or soe.scheduledDeliveryDate>=:#{#searchOrderRequest.deliveryDateFrom}) AND (:#{#searchOrderRequest.deliveryDateTo} is null or soe.scheduledDeliveryDate<=:#{#searchOrderRequest.deliveryDateTo})) AND ((:#{#searchOrderRequest.processingDateFrom} is null or soe.scheduledProcessDate>=:#{#searchOrderRequest.processingDateFrom}) AND (:#{#searchOrderRequest.processingDateTo} is null or soe.scheduledProcessDate<=:#{#searchOrderRequest.processingDateTo})) AND ((:#{#searchOrderRequest.createdDateFrom} is null or soe.createTs>=:#{#searchOrderRequest.createdDateFrom}) AND (:#{#searchOrderRequest.createdDateTo} is null or soe.createTs<=:#{#searchOrderRequest.createdDateTo})) AND (:#{#searchOrderRequest.orderStatusId} is null or so.orderStatusId=:#{#searchOrderRequest.orderStatusId}) AND (:#{#searchOrderRequest.customerId} is null or oc.customerId=:#{#searchOrderRequest.customerId}) AND (:#{#searchOrderRequest.customerGroup} is null or oc.cogId=:#{#searchOrderRequest.customerGroup}) AND (:#{#searchOrderRequest.orderTypeId} is null or so.orderTypeId=:#{#searchOrderRequest.orderTypeId})

#manage.order.search=SELECT so FROM SupplierOrder so INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderCustomer oc WHERE (:#{#searchOrderRequest.orderId} is null or so.orderId=:#{#searchOrderRequest.orderId}) AND (:#{#searchOrderRequest.divisionId} is null or oc.divisionId=:#{#searchOrderRequest.divisionId}) AND (:#{#searchOrderRequest.supplierId} is null or so.supplierId=:#{#searchOrderRequest.supplierId} ) AND ((:#{#searchOrderRequest.deliveryDateFrom} is null or soe.scheduledDeliveryDate>=:#{#searchOrderRequest.deliveryDateFrom}) AND (:#{#searchOrderRequest.deliveryDateTo} is null or soe.scheduledDeliveryDate<=:#{#searchOrderRequest.deliveryDateTo})) AND ((:#{#searchOrderRequest.processingDateFrom} is null or soe.scheduledProcessDate>=:#{#searchOrderRequest.processingDateFrom}) AND (:#{#searchOrderRequest.processingDateTo} is null or soe.scheduledProcessDate<=:#{#searchOrderRequest.processingDateTo})) AND ((:#{#searchOrderRequest.createdDateFrom} is null or soe.createTs>=:#{#searchOrderRequest.createdDateFrom}) AND (:#{#searchOrderRequest.createdDateTo} is null or soe.createTs<=:#{#searchOrderRequest.createdDateTo})) AND (:#{#searchOrderRequest.orderStatusId} is null or so.orderStatusId=:#{#searchOrderRequest.orderStatusId}) AND (:#{#searchOrderRequest.customerId} is null or oc.customerId=:#{#searchOrderRequest.customerId}) AND (:#{#searchOrderRequest.customerGroup} is null or oc.cogId=:#{#searchOrderRequest.customerGroup}) AND (:#{#searchOrderRequest.orderTypeId} is null or so.orderTypeId=:#{#searchOrderRequest.orderTypeId})
manage.order.search=SELECT so FROM SupplierOrder so INNER JOIN FETCH so.supplierOrderEnriched soe INNER JOIN FETCH so.orderCustomer oc WHERE (:#{#searchOrderRequest.orderId} is null or so.orderId=:#{#searchOrderRequest.orderId}) AND (COALESCE(:#{#searchOrderRequest.divisionId},null) IS NULL or so.suppDivisionId IN (:#{#searchOrderRequest.divisionId})) AND (:#{#searchOrderRequest.supplierId} is null or so.supplierId=:#{#searchOrderRequest.supplierId} ) AND ((:#{#searchOrderRequest.deliveryDateFrom} is null or soe.scheduledDeliveryDate>=:#{#searchOrderRequest.deliveryDateFrom}) AND (:#{#searchOrderRequest.deliveryDateTo} is null or soe.scheduledDeliveryDate<=:#{#searchOrderRequest.deliveryDateTo})) AND ((:#{#searchOrderRequest.processingDateFrom} is null or soe.scheduledProcessDate>=:#{#searchOrderRequest.processingDateFrom}) AND (:#{#searchOrderRequest.processingDateTo} is null or soe.scheduledProcessDate<=:#{#searchOrderRequest.processingDateTo})) AND ((:#{#searchOrderRequest.createdDateFrom} is null or soe.createTs>=:#{#searchOrderRequest.createdDateFrom}) AND (:#{#searchOrderRequest.createdDateTo} is null or soe.createTs<=:#{#searchOrderRequest.createdDateTo})) AND (:#{#searchOrderRequest.orderStatusId} is null or so.orderStatusId=:#{#searchOrderRequest.orderStatusId}) AND (:#{#searchOrderRequest.customerId} is null or oc.customerId=:#{#searchOrderRequest.customerId}) AND (:#{#searchOrderRequest.customerGroupId} is null or oc.cogId=:#{#searchOrderRequest.customerGroupId}) AND (:#{#searchOrderRequest.orderTypeId} is null or so.orderTypeId=:#{#searchOrderRequest.orderTypeId})

#Count query is not working from properties file
#manage.order.search.count=SELECT COUNT(so) FROM SupplierOrder so INNER JOIN so.supplierOrderEnriched soe INNER JOIN so.orderCustomer oc WHERE (:#{#searchOrderRequest.orderId} is null or so.orderId=:#{#searchOrderRequest.orderId}) AND (:#{#searchOrderRequest.divisionId} is null or oc.divisionId=:#{#searchOrderRequest.divisionId}) AND (:#{#searchOrderRequest.supplierId} is null or so.supplierId=:#{#searchOrderRequest.supplierId} ) AND ((:#{#searchOrderRequest.deliveryDateFrom} is null or soe.scheduledDeliveryDate>=:#{#searchOrderRequest.deliveryDateFrom}) AND (:#{#searchOrderRequest.deliveryDateTo} is null or soe.scheduledDeliveryDate<=:#{#searchOrderRequest.deliveryDateTo})) AND ((:#{#searchOrderRequest.processingDateFrom} is null or soe.scheduledProcessDate>=:#{#searchOrderRequest.processingDateFrom}) AND (:#{#searchOrderRequest.processingDateTo} is null or soe.scheduledProcessDate<=:#{#searchOrderRequest.processingDateTo})) AND ((:#{#searchOrderRequest.createdDateFrom} is null or soe.createTs>=:#{#searchOrderRequest.createdDateFrom}) AND (:#{#searchOrderRequest.createdDateTo} is null or soe.createTs<=:#{#searchOrderRequest.createdDateTo})) AND (:#{#searchOrderRequest.orderStatusId} is null or so.orderStatusId=:#{#searchOrderRequest.orderStatusId}) AND (:#{#searchOrderRequest.customerId} is null or oc.customerId=:#{#searchOrderRequest.customerId}) AND (:#{#searchOrderRequest.customerGroupId} is null or oc.cogId=:#{#searchOrderRequest.customerGroupId}) AND (:#{#searchOrderRequest.orderTypeId} is null or so.orderTypeId=:#{#searchOrderRequest.orderTypeId})



update.orders.isLockedForEdit=UPDATE SupplierOrder so SET so.isLockedForEdit = :isLocked WHERE so.orderId IN (:orderIds)

manage.search.v2=SELECT so  \
 FROM SupplierOrder so  \
  INNER JOIN FETCH so.supplierOrderEnriched soe  \
  INNER JOIN FETCH so.orderCustomer oc  \
 WHERE (:#{#searchOrderRequest.orderId} is null or so.orderId=:#{#searchOrderRequest.orderId})  \
 AND (COALESCE(:#{#searchOrderRequest.divisionId},null) IS NULL or so.suppDivisionId IN (:#{#searchOrderRequest.divisionId}))  \
 AND (:#{#searchOrderRequest.supplierId} is null or so.supplierId=:#{#searchOrderRequest.supplierId} )  \
 AND ((:#{#searchOrderRequest.deliveryDateFrom} is null or so.supplierOrderEnriched.scheduledDeliveryDate>=:#{#searchOrderRequest.deliveryDateFrom})  \
 AND (:#{#searchOrderRequest.deliveryDateTo} is null or so.supplierOrderEnriched.scheduledDeliveryDate<=:#{#searchOrderRequest.deliveryDateTo}))  \
 AND ((:#{#searchOrderRequest.processingDateFrom} is null or so.supplierOrderEnriched.scheduledProcessDate>=:#{#searchOrderRequest.processingDateFrom})  \
 AND (:#{#searchOrderRequest.processingDateTo} is null or so.supplierOrderEnriched.scheduledProcessDate<=:#{#searchOrderRequest.processingDateTo}))  \
 AND ((:#{#searchOrderRequest.createdDateFrom} is null or so.supplierOrderEnriched.createTs>=:#{#searchOrderRequest.createdDateFrom})  \
 AND (:#{#searchOrderRequest.createdDateTo} is null or so.supplierOrderEnriched.createTs<=:#{#searchOrderRequest.createdDateTo}))  \
 AND (:#{#searchOrderRequest.orderStatusId} is null or so.orderStatusId=:#{#searchOrderRequest.orderStatusId})  \
 AND (:#{#searchOrderRequest.customerId} is null or so.orderCustomer.customerId=:#{#searchOrderRequest.customerId})  \
 AND (:#{#searchOrderRequest.customerGroupId} is null or so.orderCustomer.cogId=:#{#searchOrderRequest.customerGroupId})  \
 AND (:#{#searchOrderRequest.orderTypeId} is null \
 	  OR (:#{#searchOrderRequest.futureOrder} = 'N' AND so.futureOrder = 'N' AND so.orderTypeId=:#{#searchOrderRequest.orderTypeId}) \
 	  OR (so.futureOrder = 'Y' AND so.orderTypeId=:#{#searchOrderRequest.orderTypeId})) \
 AND (:#{#searchOrderRequest.userId} is null or so.createdBy=:#{#searchOrderRequest.userId}) \
 AND (:#{#searchOrderRequest.customerDivisionId} is null or oc.divisionId=:#{#searchOrderRequest.customerDivisionId})  \
 AND (:#{#searchOrderRequest.eq} is null or soe.totalItemQty = :#{#searchOrderRequest.totalQuantity.intValue()}) \
 AND (:#{#searchOrderRequest.lt} is null or soe.totalItemQty < :#{#searchOrderRequest.totalQuantity.intValue()}) \
 AND (:#{#searchOrderRequest.lte} is null or soe.totalItemQty <= :#{#searchOrderRequest.totalQuantity.intValue()}) \
 AND (:#{#searchOrderRequest.gt} is null or soe.totalItemQty > :#{#searchOrderRequest.totalQuantity.intValue()}) \
 AND (:#{#searchOrderRequest.gte} is null or soe.totalItemQty >= :#{#searchOrderRequest.totalQuantity.intValue()}) 

manage.search.calculated.quantity=SELECT so.orderId as orderId, \
  oc.cogLabel as cogLabel, \
  oc.customerId as customerId,  \
  so.supplierId as supplierId, \
  so.createTs as createTs, \
  soe.scheduledProcessDate as scheduledProcessDate, \
  soe.scheduledDeliveryDate as scheduledDeliveryDate, \
  SUM(CASE WHEN ol.orderLineStatusId NOT IN (:orderLineStatusIds) THEN \
  				ole.currentItemQty \
  		   ELSE \
  		   		0 \
  		   END) AS totalQuantity \
  FROM SupplierOrder so  \
  INNER JOIN so.supplierOrderEnriched soe  \
  INNER JOIN so.orderCustomer oc  \
  INNER JOIN so.orderLines ol  \
  INNER JOIN ol.orderLineEnriched ole  \
 WHERE (:#{#searchOrderRequest.productId} IS NULL OR ol.productId = :#{#searchOrderRequest.productId})  \
  AND (:#{#searchOrderRequest.supplierProductId} IS NULL OR ole.supplierProductId = :#{#searchOrderRequest.supplierProductId})  \
  AND (:#{#searchOrderRequest.retailSectionCode} IS NULL OR ole.retailSectionCode = :#{#searchOrderRequest.retailSectionCode}) \
  AND (:#{#searchOrderRequest.orderId} is null or so.orderId=:#{#searchOrderRequest.orderId})  \
  AND (COALESCE(:#{#searchOrderRequest.divisionId},null) IS NULL or so.suppDivisionId IN (:#{#searchOrderRequest.divisionId}))  \
  AND (:#{#searchOrderRequest.supplierId} is null or so.supplierId=:#{#searchOrderRequest.supplierId})  \
  AND ((:#{#searchOrderRequest.deliveryDateFrom} is null or soe.scheduledDeliveryDate>=:#{#searchOrderRequest.deliveryDateFrom})  \
  AND (:#{#searchOrderRequest.deliveryDateTo} is null or soe.scheduledDeliveryDate<=:#{#searchOrderRequest.deliveryDateTo}))  \
  AND ((:#{#searchOrderRequest.processingDateFrom} is null or soe.scheduledProcessDate>=:#{#searchOrderRequest.processingDateFrom})  \
  AND (:#{#searchOrderRequest.processingDateTo} is null or soe.scheduledProcessDate<=:#{#searchOrderRequest.processingDateTo}))  \
  AND ((:#{#searchOrderRequest.createdDateFrom} is null or soe.createTs>=:#{#searchOrderRequest.createdDateFrom})  \
  AND (:#{#searchOrderRequest.createdDateTo} is null or soe.createTs<=:#{#searchOrderRequest.createdDateTo}))  \
  AND (:#{#searchOrderRequest.orderStatusId} is null or so.orderStatusId=:#{#searchOrderRequest.orderStatusId})  \
  AND (:#{#searchOrderRequest.customerId} is null or oc.customerId=:#{#searchOrderRequest.customerId})  \
  AND (:#{#searchOrderRequest.customerGroupId} is null or oc.cogId=:#{#searchOrderRequest.customerGroupId})  \
  AND (:#{#searchOrderRequest.customerDivisionId} is null or oc.divisionId=:#{#searchOrderRequest.customerDivisionId})  \
  AND (:#{#searchOrderRequest.orderTypeId} is null \
 	  OR (:#{#searchOrderRequest.futureOrder} = 'N' AND so.futureOrder = 'N' AND so.orderTypeId=:#{#searchOrderRequest.orderTypeId}) \
 	  OR (so.futureOrder = 'Y' AND so.orderTypeId=:#{#searchOrderRequest.orderTypeId})) \
  AND (:#{#searchOrderRequest.userId} is null or so.createdBy=:#{#searchOrderRequest.userId})  \
 GROUP BY so.orderId, oc.cogLabel, oc.customerId, so.supplierId, so.createTs, soe.scheduledProcessDate, soe.scheduledDeliveryDate \
  HAVING ((:#{#searchOrderRequest.eq} is null or  SUM(ole.currentItemQty) = :#{#searchOrderRequest.totalQuantity})  \
            AND (:#{#searchOrderRequest.lt} is null or SUM(ole.currentItemQty) < :#{#searchOrderRequest.totalQuantity})  \
            AND (:#{#searchOrderRequest.lte} is null or SUM(ole.currentItemQty) <= :#{#searchOrderRequest.totalQuantity})  \
            AND (:#{#searchOrderRequest.gt} is null or SUM(ole.currentItemQty) > :#{#searchOrderRequest.totalQuantity})  \
            AND (:#{#searchOrderRequest.gte} is null or SUM(ole.currentItemQty) >= :#{#searchOrderRequest.totalQuantity}))
            
locked.supplier.orders=SELECT so FROM SupplierOrder so INNER JOIN so.orderLines ol WHERE ol.lineNbr IN (:lineNbrs) AND (so.isLockedForEdit=:isLockedForEdit OR so.orderStatusId NOT IN (:orderStatusIds))

auto.allocation.fetch.order= SELECT so FROM SupplierOrder so JOIN FETCH so.orderCustomer JOIN FETCH so.supplierOrderEnriched JOIN FETCH so.orderLines ol JOIN FETCH ol.orderLineEnriched ole WHERE  so.orderId=:orderId 

#Optimized Query for readSupplierOrder in Sequencer
sequencer.fetch.order=SELECT so FROM SupplierOrder so JOIN FETCH so.orderCustomer JOIN FETCH so.supplierOrderEnriched JOIN FETCH so.orderLines ol JOIN FETCH ol.orderLineEnriched WHERE so.orderId = :orderId

order.visibilty.fetch.order=SELECT so FROM SupplierOrder so JOIN FETCH so.orderCustomer JOIN FETCH so.supplierOrderEnriched JOIN FETCH so.orderLines ol JOIN FETCH ol.orderLineEnriched WHERE so.orderId = :orderId

inventory.cache.search.in=Select ic from InventoryCache ic WHERE ic.supplierId = :supplierId AND ic.productId IN (:productIds) AND (:thresoldTime is null or ic.lastModifiesTs > (:thresoldTime))

substituted.order.lines.search=SELECT \
  so.orderId as orderId, \
  oc.customerId as customerId, \
  so.supplierId as supplierId, \
  ole.substitutionType as subsTypeId, \
  ol.origProductId as originalProductId, \
  ol.productId as currentProductId, \
  ols.productId as subsProductId, \
  ol.orderedItemQty as orderedItemQty, \
  ole.currentItemQty as currentItemQty, \
  ols.subsOrderedQty as subsOrderedQty , \
  ole.productDesc as productDesc , \
  ols.subProductDesc as subProductDesc \
 FROM \
  SupplierOrder so \
  INNER JOIN so.orderCustomer oc \
  INNER JOIN so.supplierOrderEnriched soe \
  INNER JOIN so.orderLines ol \
  INNER JOIN ol.orderLineEnriched ole \
  LEFT OUTER JOIN ol.orderLineSubstitutions ols \
 WHERE \
  so.suppDivisionId=:#{#request.divisionId} \
  AND (:#{#request.customerDivisionId} IS NULL OR oc.divisionId =:#{#request.customerDivisionId}) \
  AND soe.scheduledProcessDate=:#{#request.processDate} \
  AND (:#{#request.deliveryDate} IS NULL OR soe.scheduledDeliveryDate=:#{#request.deliveryDate}) \
  AND (:#{#request.customerId} IS NULL OR oc.customerId=:#{#request.customerId}) \
  AND (:#{#request.supplierId} IS NULL OR so.supplierId=:#{#request.supplierId}) \
  AND (:#{#request.productId} IS NULL OR ol.origProductId=:#{#request.productId} OR ol.productId=:#{#request.productId} OR ols.productId=:#{#request.productId}) \
  AND ole.substitutionType IN (:#{#request.codes}) 

rejected.order.lines.search=SELECT \
  ol.productId AS productId, \
  ole.productDesc AS productDesc, \
  oc.orderId AS orderId, \
  oc.customerId AS customerId, \
  so.supplierId AS supplierId, \
  ol.rejectReasonCode AS rejectReasonCode \
 FROM \
  OrderLine ol \
  INNER JOIN ol.supplierOrder so \
  INNER JOIN so.orderCustomer oc \
  INNER JOIN so.supplierOrderEnriched soe \
  INNER JOIN ol.orderLineEnriched ole \
 WHERE \
  so.suppDivisionId=:#{#request.divisionId} \
  AND (:#{#request.customerDivisionId} IS NULL OR oc.divisionId =:#{#request.customerDivisionId}) \
  AND soe.scheduledProcessDate=:#{#request.processDate} \
  AND ol.orderLineStatusId IN (:orderLineStatusIds) \
  AND (:#{#request.deliveryDate} IS NULL OR soe.scheduledDeliveryDate=:#{#request.deliveryDate}) \
  AND (:#{#request.customerId} IS NULL OR oc.customerId=:#{#request.customerId}) \
  AND (:#{#request.supplierId} IS NULL OR so.supplierId=:#{#request.supplierId}) \
  AND (:#{#request.productId} IS NULL OR ol.productId=:#{#request.productId}) \
  AND (:#{#request.codes} IS NULL OR ol.rejectReasonCode IN (:#{#request.codes}))
     
     
adjusted.order.lines.search=SELECT \
  so.orderId as orderId, \
  oc.customerId as customerId,  \
  oc.customerName as customerName, \
  so.supplierId as supplierId, \
  ol.productId as productId, \
  ole.productDesc as productDesc, \
  ol.orderedItemQty as orderedItemQty, \
  ola.adjustmentItemQty as adjustmentItemQty, \
  ola.createTs as createTs, \
  ola.adjustmentReasonId as adjustmentReasonId \
 FROM \
  SupplierOrder so  \
  INNER JOIN so.orderCustomer oc  \
  INNER JOIN so.supplierOrderEnriched soe \
  INNER JOIN so.orderLines ol  \
  INNER JOIN ol.orderLineEnriched ole  \
  INNER JOIN ol.orderLineAdjustments ola  \
 WHERE \
  so.suppDivisionId=:#{#request.divisionId} \
  AND (:#{#request.customerDivisionId} IS NULL OR oc.divisionId =:#{#request.customerDivisionId}) \
  AND (:#{#request.customerId} IS NULL OR oc.customerId =:#{#request.customerId}) \
  AND (:#{#request.supplierId} IS NULL OR so.supplierId =:#{#request.supplierId}) \
  AND (:#{#request.productId} IS NULL OR ol.productId =:#{#request.productId})  \
  AND soe.scheduledProcessDate =:#{#request.processDate} \
  AND (:#{#request.deliveryDate} IS NULL OR soe.scheduledDeliveryDate =:#{#request.deliveryDate}) \
  AND ola.adjustmentReasonId IN (:#{#request.codes})  

  
update.enrich.tracker.status=UPDATE EnrichTracker et SET et.enrichStatusId =:enrichStatus \
WHERE et.enrichTrackerId IN (:enrichTrackerIds)


order.allocation.brute.force.search=SELECT \
  ol.productId as productId, \
  count(ol.productId) as totalLines, \
  sum(ol.orderedItemQty) as totalOriginalQty, \
  sum(ole.currentItemQty) as orderedQty, \
  ole.productDesc as productDesc \
FROM SupplierOrder so \
INNER JOIN so.orderCustomer oc \
INNER JOIN so.supplierOrderEnriched soe \
INNER JOIN so.orderLines ol \
INNER JOIN ol.orderLineEnriched ole \
WHERE \
(:#{#allocationSearchRequest.orderId} IS NULL or so.orderId=:#{#allocationSearchRequest.orderId}) \
AND (:#{#allocationSearchRequest.divisionId} IS NULL or so.suppDivisionId=:#{#allocationSearchRequest.divisionId}) \
AND (:#{#allocationSearchRequest.supplierId} IS NULL or so.supplierId=:#{#allocationSearchRequest.supplierId}) \
AND (COALESCE(:#{#allocationSearchRequest.productIds},null) is null or ol.productId IN (:#{#allocationSearchRequest.productIds})) \
AND (:#{#allocationSearchRequest.deliveryDate} is null or soe.scheduledDeliveryDate=:#{#allocationSearchRequest.deliveryDate}) \
AND (:#{#allocationSearchRequest.processingDate} is null or soe.scheduledProcessDate=:#{#allocationSearchRequest.processingDate}) \
AND so.orderStatusId IN (:orderStatusIds) \
AND so.orderTypeId IN (:orderTypeIds) \
AND (:#{#allocationSearchRequest.customerId} IS NULL or oc.customerId=:#{#allocationSearchRequest.customerId}) \
AND (:#{#allocationSearchRequest.customerGroupId} IS NULL or oc.cogId=:#{#allocationSearchRequest.customerGroupId}) \
AND ol.orderLineStatusId NOT IN (:invalidOrderLineStatuses) \
AND (so.isLockedForEdit is null or so.isLockedForEdit not like :isLockedForEdit) \
GROUP BY ol.productId, ole.productDesc ORDER BY orderedQty DESC

order.allocation.turbo.search=SELECT \
  ol.productId as productId,  \
  ole.productDesc as productDesc, \
  count(ol.productId) as totalLines, \
  SUM(ol.orderedItemQty) as totalOriginalQty, \
  SUM(ole.currentItemQty) as orderedQty,   \
  COALESCE(ic.availQty,0) as boh, \
  COALESCE(ic.rawAvailQty,0) as rawAvailQty, \
  COALESCE(ic.futureRecvQty,0)  as futureRecvQty, \
  (SUM(ole.currentItemQty) - COALESCE(ic.availQty,0)) AS diff  \
FROM SupplierOrder so  \
INNER JOIN so.orderCustomer oc \
INNER JOIN so.supplierOrderEnriched soe \
INNER JOIN so.orderLines ol \
INNER JOIN ol.orderLineEnriched ole \
LEFT OUTER JOIN InventoryCache ic ON ic.productId = ol.productId AND ic.supplierId = :#{#allocationSearchRequest.supplierId} \
WHERE \
(:#{#allocationSearchRequest.orderId} IS NULL or so.orderId=:#{#allocationSearchRequest.orderId}) \
AND (:#{#allocationSearchRequest.divisionId} IS NULL or so.suppDivisionId=:#{#allocationSearchRequest.divisionId}) \
AND (:#{#allocationSearchRequest.supplierId} IS NULL or so.supplierId=:#{#allocationSearchRequest.supplierId}) \
AND (COALESCE(:#{#allocationSearchRequest.productIds},null) is null or ol.productId IN (:#{#allocationSearchRequest.productIds})) \
AND (:#{#allocationSearchRequest.deliveryDate} is null or soe.scheduledDeliveryDate=:#{#allocationSearchRequest.deliveryDate}) \
AND (:#{#allocationSearchRequest.processingDate} is null or soe.scheduledProcessDate=:#{#allocationSearchRequest.processingDate}) \
AND so.orderStatusId IN (:orderStatusIds) \
AND so.orderTypeId IN (:orderTypeIds) \
AND (:#{#allocationSearchRequest.customerId} IS NULL or oc.customerId=:#{#allocationSearchRequest.customerId}) \
AND (:#{#allocationSearchRequest.customerGroupId} IS NULL or oc.cogId=:#{#allocationSearchRequest.customerGroupId}) \
AND ol.orderLineStatusId NOT IN (:invalidOrderLineStatuses) \
AND (so.isLockedForEdit is null or so.isLockedForEdit not like :isLockedForEdit) \
GROUP BY ol.productId, ole.productDesc,ic.availQty,ic.rawAvailQty,ic.futureRecvQty \
HAVING ((COALESCE(:#{#allocationSearchRequest.productIds},null) is null and COALESCE(ic.availQty, 0) < SUM(ole.currentItemQty)) \
		OR \
		(COALESCE(:#{#allocationSearchRequest.productIds},null) is not null)) \
ORDER BY diff DESC
